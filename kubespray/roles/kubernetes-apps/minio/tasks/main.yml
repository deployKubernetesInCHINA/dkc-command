- name: Minio | install minio operator
  copy:
    src: "{{ local_release_dir }}/kubectl-minio_4.1.3_linux_amd64"
    dest: "{{ bin_dir }}/kubectl-minio"
    mode: 0755
    remote_src: true

- name: Minio | install minio mc
  copy:
    src: "{{ local_release_dir }}/mc"
    dest: "{{ bin_dir }}/mc"
    mode: 0755
    remote_src: true
- name: Minio | create directory
  file:
    path: "{{local_release_dir}}/charts/minio"
    state: directory

- name: Minio | download template
  template:
#    variable_start_string: "<<"
#    variable_end_string: ">>"
    src: "tenant.yaml.j2"
    dest: "{{local_release_dir}}/charts/minio/tenant.yaml"
    backup: yes
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Minio | download ingress
  template:
    #    variable_start_string: "<<"
    #    variable_end_string: ">>"
    src: "ingress.yaml.j2"
    dest: "{{local_release_dir}}/charts/minio/ingress.yaml"
    backup: yes
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Minio | download ingress
  template:
    #    variable_start_string: "<<"
    #    variable_end_string: ">>"
    src: "minio-console-svc.yaml.j2"
    dest: "{{local_release_dir}}/charts/minio/minio-console-svc.yaml"
    backup: yes
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Minio | minio operater init
  shell:
    cmd: kubectl minio init --console-image minio/console:v0.7.4 --default-console-image minio/console:v0.7.4 --default-minio-image minio/minio:RELEASE.2021-06-17T00-10-46Z
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Minio | minio create tenant namespace
  shell: |
    kubectl create ns storage
  ignore_errors: yes
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Minio | Wait for minio operator
  shell: |
    kubectl get pods -n minio-operator --selector name=minio-operator -o jsonpath='{.items[0].status.phase}'
  register: minio_health
  until: "'Running' in minio_health.stdout_lines"
  retries: 10
  delay: 6

- name:  Pause for 30 seconds
  pause: seconds=30

- name: Minio | minio debug Variables
  debug:
    msg: "servers count: {{ minio_servers_count }}, volumes per server: {{ minio_volumes_per_server }},
         storage per server: {{minio_storage_per_server}}, storage per volume: {{minio_storage_per_volume_Gi}} "

- name: Minio | minio create tenant
  shell: |
    kubectl apply -f "{{local_release_dir}}/charts/minio/tenant.yaml" -n storage
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Minio | minio create ingress
  shell: |
    kubectl apply -f "{{local_release_dir}}/charts/minio/ingress.yaml" -n storage
    kubectl apply -f "{{local_release_dir}}/charts/minio/minio-console-svc.yaml" -n storage
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Minio | Wait for minio tenant
  shell: |
    kubectl get pods -n storage --selector app=minio -o jsonpath='{.items[0].status.phase}'
  register: tenant_health
  until: "'Running' in tenant_health.stdout_lines"
  retries: 10
  delay: 6

- name:  Pause for 30 seconds
  pause: seconds=30

#todo init bucket
- name: Minio | set minio svc ip facts
  shell: |
    kubectl get svc minio -n storage -o jsonpath='{.spec.clusterIP}'
  register: minio_svc_ip

- name: Minio | add minio repo; create bucket
  shell: |
    mc alias set minio http://{{minio_svc_ip.stdout}} minio minio123

